models:
- model_spec:
    edge_sources: [salesforceTasks, salesforceContact, websitePageVisits, webhookSource,
      websiteSource, blacklistDomains, domainSummary, webappIdentifies, salesForceLeadsTable,
      autotrackIdentifies]
    entity_key: user
    main_id_type: main_id
  model_type: id_stitcher
  name: domain_profile_id_stitcher
- model_spec:
    features:
    - tablefeature: {description: Whether a domain is mql or not, name: is_mql, table: salesForceLeadsTable,
        value: max(case when salesForceLeadsTable.mql__c == 'True' then 1 else 0 end)}
    - tablevar: {filter: (context_sources_job_run_id = (select top 1 context_sources_job_run_id
          from blacklistDomains order by timestamp desc)), name: blacklistFlag, table: blacklistDomains,
        value: max(case when exclude_reason is not null then 1 else 0 end)}
    - tablevar: {name: domainSummary_account_type, table: domainSummary, value: domainSummary.account_type}
    - feature: {description: Whether a domain should be ignored for the analysis,
        name: ignore_domain, value: max(case when blacklistFlag = 1 or domainSummary_account_type
          like '%free%' then 1 else 0 end)}
    - macro: {name: call_conversion, value: 'type = ''Call'' or tasksubtype=''Call''
          or type like ''%demo%'') and \ (rlike(lower(subject), ''.*\\bcall\\b.*'')
          or rlike(lower(subject), ''.*\\bdemo\\b.*'''}
    - tablevar: {filter: macro(call_conversion), name: salesCallEventTime, table: salesforceTasks,
        value: min(activitydate)}
    - feature: {name: sales_conversion_timestamp, value: salesCallEventTime}
    - tablevar: {description: 'Salesforce touches are converted to one of following
          events - sf_inbound_email, sf_outbound_email, sf_call, null', name: salesEvents,
        table: salesforceTasks, value: 'json_agg(activitydate, case when (type=''Email''
          or tasksubtype = ''Email'') then case when lower(subject) like ''%[in]%''
          then ''sf_inbound_email'' \ else ''sf_outbound_email'' end when macro(call_conversion)
          then ''sf_call'' else null end as event)'}
    - tablevar: {filter: timestamp < sales_conversion_timestamp and timestamp > var('start_date'),
        name: page_events_var, table: websitePageVisits, value: 'json_agg(timestamp,
          case when split_part(trim(context_page_path, ''/''), ''/'', 1) in var(''valid_page_paths'')
          then split_part(trim(context_page_path, ''/''), ''/'', 1) \ else var(''default_page_path'')
          end as event)'}
    - feature: {name: page_events, value: page_events_var}
    - tablevar: {filter: variable_1 is null and timestamp < sales_conversion_timestamp
          and timestamp > var('start_date'), name: webhookFormSubmit, table: webhookSource,
        value: min(timestamp)}
    - feature: {name: formSubmit, value: 'min(webhookFormSubmit, websiteFormSubmit)'}
    id_stitching: {model: domain_profile_id_stitcher}
    validity_time: 24h
  model_type: feature_table_model
  name: domain_profile
- model_spec:
    edge_sources: [salesforceTasks, salesforceContact, websitePageVisits, webhookSource,
      websiteSource, blacklistDomains, domainSummary, webappIdentifies, salesForceLeadsTable,
      autotrackIdentifies]
    entity_key: user2
    main_id_type: main_id
  model_type: id_stitcher
  name: local_profile
